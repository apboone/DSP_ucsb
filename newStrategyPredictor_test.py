Strategy_Predictor = True 

import os
import xlsxwriter

####
#   python scripting items to do
####
#   - fix strat box counts
#   - I would love to figure out how to make each of those scripts print 
#   to a new sheet within the excel file --> solution can be found here: https://xlsxwriter.readthedocs.io/workbook.html
#  - if it is a pure form... delete the steps on the wrong thing....

a = [1,90]
b = [90,179]
c = [180,269]
d = [270,360]

#******************************************************************************************************
#                                       DSP1 COORDS
#******************************************************************************************************

dsp1_01_sc = [[2,2],[2,3],[2,4],[3,4],[4,4],[5,4],[5,5],[5,6],[6,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9]]
dsp1_01_ln = [[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9]]
dsp1_01_RVln = [[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2]]

dsp1_02_sc = [[2,2],[2,3],[2,4],[3,4],[4,4],[5,4],[5,5],[5,6],[6,6],[7,6],[7,7]]
dsp1_02_ln = [[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7]]
dsp1_02_RVln = [[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2]]

#this one has two possible shortcut paths
dsp1_03_sc = [[4,0],[5,0],[6,0],[6,3],[6,2],[6,1],[5,10],[5,9],[5,8],[5,7],[5,6],[5,5],[5,4],[5,3],[1,10],[2,10],[3,10],[4,10],[1,9],[1,8],[1,7],[1,6],[1,5],[1,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0]]
dsp1_03_ln = [[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10]]
dsp1_03_RVln = [[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0]]

dsp1_04_sc = [[2,0],[3,0],[4,0],[2,4],[2,3],[2,2],[2,1],[1,8],[1,7],[1,6],[1,5],[1,4]]
dsp1_04_ln = [[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8]]
dsp1_04_RVln = [[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0]]

dsp1_05_sc = [[6,0],[7,0],[8,0],[9,0],[6,3],[6,2],[6,1],[5,7],[5,6],[5,5],[5,4],[5,3],[3,7],[4,7]]
dsp1_05_ln = [[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7]]
dsp1_05_RVln = [[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0]]

dsp1_06_sc = [[6,0],[7,0],[8,0],[9,0],[6,3],[6,2],[6,1],[5,3],[5,4],[4,4],[3,4]]
dsp1_06_ln = [[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4]]
dsp1_06_RVln = [[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0]]

dsp1_07_sc = [[10,6],[10,5],[10,4],[5,6],[6,6],[7,6],[8,6],[9,6],[5,7],[1,7],[2,7],[3,7],[4,7],[1,8]]
dsp1_07_ln = [[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8]]
dsp1_07_RVln = [[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4]]

#this one has two possible shortcut paths
dsp1_08_sc = [[10,6],[10,5],[10,4],[10,3],[5,6],[6,6],[7,6],[8,6],[9,6],[5,5],[5,4],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3]]
dsp1_08_ln = [[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5]]
dsp1_08_RVln = [[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4]]

dsp1_09_sc = [[2,2],[2,3],[2,4],[3,4],[4,4],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[9,6]]
dsp1_09_ln = [[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2]]
dsp1_09_RVln = [[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6]]

#this one has two possible shortcut paths
dsp1_10_sc = [[5,6],[6,6],[7,6],[8,6],[9,6],[5,10],[5,9],[5,8],[5,7],[3,10],[4,10],[6,10],[7,10],[7,9],[7,8],[7,7]]
dsp1_10_ln = [[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10]]
dsp1_10_RVln = [[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6]]

dsp1_11_sc = [[7,7],[7,6],[6,6],[5,6],[5,5]]
dsp1_11_ln = [[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5]]
dsp1_11_RVln = [[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7]]

dsp1_12_sc = [[7,7],[7,6],[6,6],[5,6],[5,5],[5,4],[5,3],[6,3],[6,2],[6,1],[6,0],[4,0],[5,0]]
dsp1_12_ln = [[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0]]
dsp1_12_RVln = [[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7]]

dsp1_13_sc = [[7,8],[8,8],[9,8],[9,9],[7,7],[7,6],[6,6],[5,6],[5,5],[5,4],[5,3],[6,3],[6,2],[6,1],[6,0],[4,0],[5,0]]
dsp1_13_ln = [[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0]]
dsp1_13_RVln = [[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9]]

#this one has two possible shortcut paths
dsp1_14_sc = [[9,9],[5,10],[6,10],[7,10],[8,10],[9,10],[5,9],[5,8],[5,7],[3,7],[4,7],[7,8],[8,8],[9,8],[7,7],[7,6],[5,6],[6,6]]
dsp1_14_ln = [[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7]]
dsp1_14_RVln = [[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9]]

dsp1_15_sc = [[3,10],[4,10],[5,10],[5,9], [5,8], [5,7], [5,6], [5,5], [5,4], [5,3],[6,3],[6,2],[6,1],[6,0],[7,0],[8,0],[9,0]]
dsp1_15_ln = [[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0]]
dsp1_15_RVln = [[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10]]

#this one has two possible shortcut paths
dsp1_16_sc = [[1,10],[2,10],[3,10],[4,10],[5,10],[5,9],[5,8],[5,7],[5,6],[5,5],[5,4],[1,4],[2,4],[3,4],[4,4],[1,9],[1,8],[1,7],[1,6],[1,5]]
dsp1_16_ln = [[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4]]
dsp1_16_RVln = [[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10]]

dsp1_17_sc = [[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[6,6],[7,6],[7,7]]
dsp1_17_ln = [[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7]]
dsp1_17_RVln = [[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8]]

dsp1_18_sc = [[2,4],[2,3],[2,2],[1,8],[1,7],[1,6],[1,5],[1,4]]
dsp1_18_ln = [[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2]]
dsp1_18_RVln = [[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8]]

dsp1_19_sc = [[3,7],[4,7],[5,7],[5,6],[6,6],[7,6],[8,6],[9,6]]
dsp1_19_ln = [[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6]]
dsp1_19_RVln = [[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7]]

dsp1_20_sc = [[3,7],[4,7],[5,7],[5,6],[6,6],[7,6],[8,6],[9,6],[10,6],[10,5],[10,4]]
dsp1_20_ln = [[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4]]
dsp1_20_RVln = [[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],
[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7]]

dsp1_21_sc = [[5,5], [5,4], [5,3],[6,3], [6,2], [6,1], [6,0],[7,0],[8,0],[9,0]]
dsp1_21_ln = [[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0]]
dsp1_21_RVln = [[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5]]

dsp1_22_sc = [[5,6], [5,5],[6,6],[7,6],[7,8], [7,7],[8,8],[9,8],[9,9]]
dsp1_22_ln = [[5,5],[5,4],[4,4],[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9]]
dsp1_22_RVln = [[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5]]

dsp1_23_sc = [[3,4],[4,4],[5,4],[5,6], [5,5],[6,6],[7,6],[8,6],[9,6]]
dsp1_23_ln = [[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4],[10,5],[10,6],[9,6]]
dsp1_23_RVln = [[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4]]

dsp1_24_sc = [[3,4],[4,4],[5,4],[5,3],[6,3],[7,3],[8,3],[9,3],[10,3],[10,4]]
dsp1_24_ln = [[3,4],[2,4],[2,3],[2,2],[2,1],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[10,0],[10,1],[10,2],[10,3],[10,4]]
dsp1_24_RVln = [[10,4],[10,5],[10,6],[9,6],[8,6],[7,6],[7,7],[7,8],[8,8],[9,8],[9,9],[9,10],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[1,9],[1,8],[1,7],[2,7],[3,7],[4,7],[5,7],[5,6],[5,5],[5,4],[4,4],[3,4]]

#******************************************************************************************
#                                       DSP2 COORDS
#******************************************************************************************

dsp2_01_sc = [[8,8],[8,7],[8,6],[7,6],[6,6],[5,6],[5,5],[5,4],[4,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1]]
dsp2_01_ln = [[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1]]
dsp2_01_RVln = [[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8]]

dsp2_02_sc = [[8,8],[8,7],[8,6],[7,6],[6,6],[5,6],[5,5],[5,4],[4,4],[3,4],[3,3]]
dsp2_02_ln = [[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3]]
dsp2_02_RVln = [[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8]]

#t32s on6 310s two poss29l6 s3ort8ut p10t3s
dsp2_03_sc = [[6,10],[5,10],[4,10],[4,7],[4,8],[4,9],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[5,7],[9,0],[8,0],[7,0],[6,0],[9,1],[9,2],[9,3],[9,4],[9,5],[9,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10]]
dsp2_03_ln = [[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]]
dsp2_03_RVln = [[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10]]

dsp2_04_sc = [[8,10],[7,10],[6,10],[8,6],[8,7],[8,8],[8,9],[9,2],[9,3],[9,4],[9,5],[9,6]]
dsp2_04_ln = [[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2]]
dsp2_04_RVln = [[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10]]

dsp2_05_sc = [[4,10],[3,10],[2,10],[1,10],[4,7],[4,8],[4,9],[5,3],[5,4],[5,5],[5,6],[5,7],[7,3],[6,3]]
dsp2_05_ln = [[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3]]
dsp2_05_RVln = [[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10]]

dsp2_06_sc = [[4,10],[3,10],[2,10],[1,10],[4,7],[4,8],[4,9],[5,7],[5,6],[6,6],[7,6]]
dsp2_06_ln = [[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6]]
dsp2_06_RVln = [[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10]]

dsp2_07_sc = [[0,4],[0,5],[0,6],[5,4],[4,4],[3,4],[2,4],[1,4],[5,3],[9,3],[8,3],[7,3],[6,3],[9,2]]
dsp2_07_ln = [[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2]]
dsp2_07_RVln = [[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6]]

#t32s on6 310s two poss29l6 s3ort8ut p10t3s
dsp2_08_sc = [[0,4],[0,5],[0,6],[0,7],[5,4],[4,4],[3,4],[2,4],[1,4],[5,5],[5,6],[5,7],[4,7],[3,7],[2,7],[1,7],[0,7]]
dsp2_08_ln = [[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5]]
dsp2_08_RVln = [[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6]]

dsp2_09_sc = [[8,8],[8,7],[8,6],[7,6],[6,6],[5,6],[5,5],[5,4],[4,4],[3,4],[2,4],[1,4]]
dsp2_09_ln = [[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8]]
dsp2_09_RVln = [[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4]]

#t32s on6 310s two poss29l6 s3ort8ut p10t3s
dsp2_10_sc = [[5,4],[4,4],[3,4],[2,4],[1,4],[5,0],[5,1],[5,2],[5,3],[7,0],[6,0],[4,0],[3,0],[3,1],[3,2],[3,3]]
dsp2_10_ln = [[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]]
dsp2_10_RVln = [[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4]]

dsp2_11_sc = [[3,3],[3,4],[4,4],[5,4],[5,5]]
dsp2_11_ln = [[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5]]
dsp2_11_RVln = [[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3]]

dsp2_12_sc = [[3,3],[3,4],[4,4],[5,4],[5,5],[5,6],[5,7],[4,7],[4,8],[4,9],[4,10],[6,10],[5,10]]
dsp2_12_ln = [[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10]]
dsp2_12_RVln = [[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3]]

dsp2_13_sc = [[3,2],[2,2],[1,2],[1,1],[3,3],[3,4],[4,4],[5,4],[5,5],[5,6],[5,7],[4,7],[4,8],[4,9],[4,10],[6,10],[5,10]]
dsp2_13_ln = [[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10]]
dsp2_13_RVln = [[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1]]

#t32s on6 310s two poss29l6 s3ort8ut p10t3s
dsp2_14_sc = [[1,1],[5,0],[4,0],[3,0],[2,0],[1,0],[5,1],[5,2],[5,3],[7,3],[6,3],[3,2],[2,2],[1,2],[3,3],[3,4],[5,4],[4,4]]
dsp2_14_ln = [[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3]]
dsp2_14_RVln = [[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1]]

dsp2_15_sc = [[7,0],[6,0],[5,0],[5,1], [5,2], [5,3], [5,4], [5,5], [5,6], [5,7],[4,7],[4,8],[4,9],[4,10],[3,10],[2,10],[1,10]]
dsp2_15_ln = [[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10]]
dsp2_15_RVln = [[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]]

#t32s on6 310s two poss29l6 s3ort8ut p10t3s
dsp2_16_sc = [[9,0],[8,0],[7,0],[6,0],[5,0],[5,1],[5,2],[5,3],[5,4],[5,5],[5,6],[9,6],[8,6],[7,6],[6,6],[9,1],[9,2],[9,3],[9,4],[9,5]]
dsp2_16_ln = [[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6]]
dsp2_16_RVln = [[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0]]

dsp2_17_sc = [[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[4,4],[3,4],[3,3]]
dsp2_17_ln = [[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3]]
dsp2_17_RVln = [[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2]]

dsp2_18_sc = [[8,6],[8,7],[8,8],[9,2],[9,3],[9,4],[9,5],[9,6]]
dsp2_18_ln = [[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8]]
dsp2_18_RVln = [[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2]]

dsp2_19_sc = [[7,3],[6,3],[5,3],[5,4],[4,4],[3,4],[2,4],[1,4]]
dsp2_19_ln = [[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4]]
dsp2_19_RVln = [[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3]]

dsp2_20_sc = [[7,3],[6,3],[5,3],[5,4],[4,4],[3,4],[2,4],[1,4],[0,4],[0,5],[0,6]]
dsp2_20_ln = [[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6]]
dsp2_20_RVln = [[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],
[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3]]

dsp2_21_sc = [[5,5], [5,6], [5,7],[4,7], [4,8], [4,9], [4,10],[3,10],[2,10],[1,10]]
dsp2_21_ln = [[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10]]
dsp2_21_RVln = [[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5]]

dsp2_22_sc = [[5,4], [5,5],[4,4],[3,4],[3,2], [3,3],[2,2],[1,2],[1,1]]
dsp2_22_ln = [[5,5],[5,6],[6,6],[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1]]
dsp2_22_RVln = [[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5]]

dsp2_23_sc = [[7,6],[6,6],[5,6],[5,4], [5,5],[4,4],[3,4],[2,4],[1,4]]
dsp2_23_ln = [[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6],[0,5],[0,4],[1,4]]
dsp2_23_RVln = [[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6]]

dsp2_24_sc = [[7,6],[6,6],[5,6],[5,7],[4,7],[3,7],[2,7],[1,7],[0,7],[0,6]]
dsp2_24_ln = [[7,6],[8,6],[8,7],[8,8],[8,9],[8,10],[7,10],[6,10],[5,10],[4,10],[3,10],[2,10],[1,10],[0,10],[0,9],[0,8],[0,7],[0,6]]
dsp2_24_RVln = [[0,6],[0,5],[0,4],[1,4],[2,4],[3,4],[3,3],[3,2],[2,2],[1,2],[1,1],[1,0],[2,0],[3,0],[4,0],[5,0],[6,0],[7,0],[8,0],[9,0],[9,1],[9,2],[9,3],[8,3],[7,3],[6,3],[5,3],[5,4],[5,5],[5,6],[6,6],[7,6]]


#[shortcutSteps, LearnSteps, RevLearnSteps]


dsp1 = [[15,25,25],[11,21,29],[16,28,22],[12,32,18],[14,30,20],[11,37,13],[14,22,28],
[9,29,21],[12,32,18],[11,15,35],[5,23,27],[13,33,17],[17,29,21],[11,15,35],[17,27,23],
[11,15,35],[10,34,16],[8,14,36],[8,28,22],[11,25,25],[10,16,34],[9,31,19],[9,21,29], [10,18,32]]

dsp2 = [[15,25,25],[11,21,29],[16,28,22],[12,32,18],[14,30,20],[11,37,13],[14,22,28],
[9,29,21],[12,32,18],[11,15,35],[5,23,27],[13,33,17],[17,29,21],[11,15,35],[17,27,23],
[11,15,35],[10,34,16],[8,14,36],[8,28,22],[11,25,25],[10,16,34],[9,31,19],[9,21,29], [10,18,32]]


TrialID=""

def checkFail(Time_Elapsed):
    if Time_Elapsed >= 39.97:
        return True
    else: 
        return False 
    
def getLineInfo(line): #returns list of all info
    split_time = line.split(':')
    Time_Elapsed = float(split_time[0])
    split_other = split_time[1].split(',')
    X_Coord = float(split_other[0])
    Y_Coord = float(split_other[1]) 
    info = [Time_Elapsed, X_Coord, Y_Coord]
    return info

def getTrialID(line):
    line = current_line.split("_")
    TrialID = line[1] + "_" + line[2]
    return TrialID

def getShortcut(TrialID):
    newVar = TrialID + "_sc"
    return eval(newVar)

def getLearned(TrialID):
    newVar = TrialID + "_ln"
    return eval(newVar)
    
def getREVLearned(TrialID):
    newVar = TrialID + "_RVln"
    return eval(newVar)


def getCounters(TrialID):
    #counters[scCounter, lnCounter, RVlnCounter, otherCounter]
    counters = [0, 0, 0, 0]
    box_num = 1
    for coord in boxes_touched:
        # if box_num == 2:
            # if coord not in getShortcut(TrialID): # why is this being done? ln 285-286
            #     counters[1] -= 1
        #if box_num == len(boxes_touched) - 1:
        #    if coord not in getREVLearned(TrialID):
        #        counters[2] -= 1
        if coord in getShortcut(TrialID):
            counters[0] += 1
        if coord in getLearned(TrialID):
            counters[1] += 1
        if coord in getREVLearned(TrialID):
            counters[2] += 1
        if coord not in getShortcut(TrialID) and coord not in getLearned(TrialID) and coord not in getREVLearned(TrialID):
            counters[3] += 1
        box_num += 1        
        #print(boxes_touched)
        #print(steps)
    return counters

def getInfo():
    #info = [length, lnRatio, RVlnRatio]
    info = [0.0, 0.0, 0.0]
    info[0] = float(steps/dsp1[TrialNo-1][1])
    info[1] = float(lnCounter/steps)
    info[2] = float(RVlnCounter/steps)
    #print info
    return info

def trialChecker():
            
    #print (scCounter)
    #print (lnCounter)
    #print (RVlnCounter)
    #print (otherCounter)    
    
    if (TrialID.startswith("dsp1")):
        if scCounter == dsp1[TrialNo-1][0] and steps == dsp1[TrialNo-1][0]:
            return "SHORTCUT"
        if lnCounter == dsp1[TrialNo-1][1] and steps == dsp1[TrialNo-1][1]:
            return "LEARNED"
        if RVlnCounter == dsp1[TrialNo-1][2] and steps == dsp1[TrialNo-1][2]:
            return "REVERSE LEARNED"
        else:
        	if length < .84 and lnRatio < .7 and RVlnRatio < .7:
        		return "SHORTCUT LIBERAL"
        	if lnRatio >= .7:
        		return "LEARNED LIBERAL"
        	if RVlnRatio >= .7:
        		return "REVERSE LEARNED LIBERAL"
        	if length >= .84 and (lnRatio < .7 or RVlnRatio < .7):
        		return "UNCODABLE"


    if (TrialID.startswith("dsp2")):
        if scCounter == dsp2[TrialNo-1][0] and steps == dsp2[TrialNo-1][0]:
            return "SHORTCUT"
        if lnCounter == dsp2[TrialNo-1][1] and steps == dsp2[TrialNo-1][1]:
            return "LEARNED"
        if RVlnCounter == dsp2[TrialNo-1][2] and steps == dsp2[TrialNo-1][2]:
            return "REVERSE LEARNED"
        else:
        	if length < .84 and lnRatio < .7 and RVlnRatio < .7:
        		return "SHORTCUT LIBERAL"
        	if lnRatio >= .7:
        		return "LEARNED LIBERAL"
        	if RVlnRatio >= .7:
        		return "REVERSE LEARNED LIBERAL"
        	if length >= .84 and (lnRatio < .7 or RVlnRatio < .7):
        		return "UNCODABLE"
   
    
    
def appendInput():
    line = []
    line.append(ParticipantNo)  
    line.append(Trial_Count)
    line.append(TrialID)
    line.append(steps)
    line.append(scCounter)
    line.append(lnCounter)
    line.append(RVlnCounter)
    line.append(array)
    line.append(length)
    line.append(lnRatio)
    line.append(RVlnRatio)
    line.append(result)
    line.append(retrace)
    line.append(added_steps)
    return line
    
if (Strategy_Predictor == True):
    indir = "/Users/alexanderboone/Desktop/test/data/"
    outdir = "/Users/alexanderboone/Desktop/test/Steps_Counter_OutPuts/"

    wb = xlsxwriter.Workbook("/Users/alexanderboone/Desktop/test/Steps_Counter_OutPuts/StrategyPredictor_test.xlsx")
    sheet = wb.add_worksheet('Sheet')
    
    header = ["Participant", "TrialNo", "TrialID", "Total Steps", "shortcut steps", "learned steps",
              "reversal steps", "array", "LENGTH", "lnRatio", "RVlnRatio", "result", "retrace", "extra box count"]
    for i in range(len(header)):
        sheet.write(0, i, header[i])
        
    steps = 0
    scCounter = 0
    lnCounter = 0
    RVlnCounter = 0
    length = 0
    lnRatio = 0
    RVlnRatio = 0
    result = ""
    retrace = ""
    added_steps = 0
    
    TrialID = ""
    TrialNo = 0
    
    boxes_touched = []
    input_line = []
    row = 1

    ## here is what i need: if box in line 1 is not same as box in line 3, do not count line 1 or 2 
    ## or just always skip first two lines
    
    for f in os.listdir(indir):
        print (f)
        if (f != '.DS_Store'): 
            with open(indir+f) as infile:
                prev_X = 0
                prev_Y = 0
                curr_X = 0
                curr_Y = 0
                numOfLines = 0
                numOfBoxLines = 0
                prev_line = ""
                Trial_Count = 0
                retrace_steps = 0
                boxes_touched = []
                steps = 0
                for current_line in infile:
                    if (numOfLines <= 7): #this depends on which headers the file has...
                        if current_line.startswith('ParticipantNo'):
                            ParticipantNo = current_line[15:]
                        numOfLines += 1
                    elif (current_line.startswith("!!")):
                        #print (steps)
                        if Trial_Count > 0:
                            #print (boxes_touched)
                            steps = len(boxes_touched)
                            
                            lineInfo = getLineInfo(prev_line)
                            Time_Elapsed = lineInfo[0]
                            
                            counters = getCounters(TrialID)
                            scCounter = counters[0]
                            lnCounter = counters[1]
                            RVlnCounter = counters[2]
                            otherCounter = counters[3]
                            info = getInfo()
                            
                            array = ""
                            if (TrialID.startswith("dsp1")):
                                for i in dsp1[TrialNo-1]:
                                    array = array + str(i) + ", "
                            if (TrialID.startswith("dsp2")):
                                for i in dsp2[TrialNo-1]:
                                    array = array + str(i) + ", "
                                    
                            length = info[0]
                            lnRatio = info[1]
                            RVlnRatio = info[2]
                            
                            if checkFail(Time_Elapsed):
                                result = "Failure"
                            #elif retrace_steps > 1:
                            #    retrace = "Retrace"
                            else:
                                result = trialChecker()
                            
                            if retrace_steps > 1:
                            	retrace = "retrace"
                            else:
                            	retrace = ""

                            input_line = appendInput()
                            #print (result)
                            
                            col = 0
                            #print (input_line)
                            for i in input_line:
                                sheet.write(row, col, i)
                                col += 1
                            row += 1
                                
                        #Trial = 1_dsp1_02    
                        Trial = current_line[2:-1]
                        split_trial = current_line.split("_")
                        #TrialNo = 1-24
                        TrialNo = int(split_trial[2][:-1])
                        #TrialID = dsp1_05
                        TrialID = split_trial[1] + "_" + split_trial[2][:-1]
                        
                        
                        print (Trial)
                        #print(TrialID)
                        
                        Trial_Count += 1
                        steps = 0
                        boxes_touched = []
                        prev_X = 0
                        prev_Y = 0
                        curr_X = 0
                        curr_Y = 0
                        numOfBoxLines = 0
                        input_line = []
                        retrace_steps = 0
                        added_steps = 0
                        
                    else:
                        
                        if "b" in current_line:
                            
                            line = current_line.split("box ")
                            coord = line[1].split(",")
                            curr_X = int(coord[0])
                            curr_Y = int(coord[1])
                            
                            box = [curr_X, curr_Y]
                            #print(steps)
                            if (numOfBoxLines < 2): #we need sometihng here to get rid of the 1,0 boxes in the first three lines/ i cant get the and to pass correctly
                                numOfBoxLines += 1
                                #steps -=1


                            elif (prev_X != curr_X or prev_Y != curr_Y):
                                if (box in boxes_touched):
                                    retrace_steps += 1

                                if (abs(prev_X-curr_X)) + (abs(prev_Y-curr_Y)) > 1: 
                                    #steps += 1
                                    added_steps += 1


                                boxes_touched.append(box)

                                #print(steps)
                                #print(box)
                                #print(boxes_touched)

                                steps += 1 
                                prev_X = curr_X
                                prev_Y = curr_Y

                                #if it hits !!, subtact 1
                                #print(steps)
                        #print(boxes_touched)
                        print(steps)
                        #print(RVlnCounter)
                            
                        prev_line = current_line
                        
                        if TrialNo == 24:
                            curr_line = current_line


                    
                lineInfo = getLineInfo(prev_line)
                Time_Elapsed = lineInfo[0]
                
                counters = getCounters(TrialID)
                scCounter = counters[0]
                lnCounter = counters[1]
                RVlnCounter = counters[2]
                otherCounter = counters[3]
                info = getInfo()
                
                array = ""
                if (TrialID.startswith("dsp1")):
                    for i in dsp1[TrialNo-1]:
                        array = array + str(i) + ", "
                if (TrialID.startswith("dsp2")):
                    for i in dsp2[TrialNo-1]:
                        array = array + str(i) + ", "
                
                length = info[0]
                lnRatio = info[1]
                RVlnRatio = info[2]
                
                if checkFail(Time_Elapsed):
                    result = "Failure"
                #elif retrace_steps > 1:
                #    retrace = "Retrace"
                else:
                    result = trialChecker()

                if retrace_steps > 1:
                    retrace = "retrace"
                else:
                	retrace = ""
                
                input_line = appendInput()
                #print (result)
                
                col = 0
                #print (input_line)
                for i in input_line:
                    sheet.write(row, col, i)
                    col += 1
                row += 1     

wb.close()

